//node {
//    def app
//
//    stage('Clone repository') {
//        checkout scm
//    }
//
//    stage('Build image') {
//         * docker build on the command line */
//
//        app = docker.build("docker/hellonode")
//    }
//
//    stage('Test image') {
//        app.inside {
//            sh 'echo "Tests passed"'
//        }
//        sh 'env'
//    }
//
//    stage('Push image') {
//        /* Finally, we'll push the image with two tags:
//         * First, the incremental build number from Jenkins
//         * Second, the 'latest' tag.
//         * Pushing multiple tags is cheap, as all the layers are reused. */
//        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
//            app.push("${env.BUILD_NUMBER}")
//            app.push("latest")
//        }
//    }
//}

def app

pipeline {
    agent {
        label 'ecs-gopro'
    }

    stages {
        stage('Test image') {
            steps {
                sh 'env'
                sh 'pwd; ls -la; ls -latR'
            }
        }

        stage('Build image') {
            steps {
                // app = docker.build("aardvark-base:${BUILD_NUMBER}", "-f docker/Dockerfile.aardvark-base")
                sh 'ls'
            }
        }



    //     stage('Push image') {
    // //        /* Finally, we'll push the image with two tags:
    // //         * First, the incremental build number from Jenkins
    // //         * Second, the 'latest' tag.
    // //         * Pushing multiple tags is cheap, as all the layers are reused. */
    // //        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
    // //            app.push("${env.BUILD_NUMBER}")
    // //            app.push("latest")
    // //        }
    //     }
    }
}
