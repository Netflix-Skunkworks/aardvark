def app

pipeline {
    agent {
        label 'ecs-gopro'
    }

    stages {
        stage('Build image') {
            steps {
                sh 'wget -o /dev/null -O /tmp/docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-17.09.1-ce.tgz'
                sh 'tar zxvf /tmp/docker.tgz -C /tmp'
                sh 'sudo cp /tmp/docker/* /usr/bin/'
                sh 'sudo chmod u+s /usr/bin/docker'
                script {
                    dir("${WORKSPACE}/docker") {
                        sh "mkdir aardvark && find .. -not -name docker -mindepth 1 -maxdepth 1 -exec cp -Rpv '{}' ./aardvark/ ';'"
                        sh 'ls -l'
                        app = docker.build("aardvark-base:${BUILD_NUMBER}", ". -f Dockerfile.aardvark-base --build-arg AARDVARK_DB_URI=\"psql://${AARDVARK_DB_USERNAME}:${AARDVARK_DB_PASSWORD}@${AARDVARK_DB_ENDPOINT}\" --build-arg \"${AARDVARK_ROLE}\"")
                    }
                }
            }
        }



    //     stage('Push image') {
    // //        /* Finally, we'll push the image with two tags:
    // //         * First, the incremental build number from Jenkins
    // //         * Second, the 'latest' tag.
    // //         * Pushing multiple tags is cheap, as all the layers are reused. */
    // //        docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
    // //            app.push("${env.BUILD_NUMBER}")
    // //            app.push("latest")
    // //        }
    //     }
    }
}
